- content_for :social_share_headers do
  meta property="og:site_name" content="Engineers.SG"
  meta property="og:title" content="#{@video.title} - Engineers.SG" /
  meta property="og:description" content=@video.description /
  meta property="og:url" content=video_slug_url(title: @video.title.parameterize, id: @video.id) /
  meta property="og:image" content=@video.image3 /
  meta property="og:type" content="website" /
  meta property="fb:app_id" content="1636558033282778" /

  meta name="twitter:card" content="summary" /
  meta name="twitter:site" content="@engineersftw" /
  meta name="twitter:title" content="#{@video.title} - Engineers.SG" /
  meta name="twitter:description" content=@video.description /
  meta name="twitter:image" content=@video.image3 /

  link rel="canonical" href=video_slug_url(title: @video.title.parameterize, id: @video.id) /

.container
  .row
    .col.s12
      h4=@video.title
  .row
    .col.s12 class=(Feature.active?(:video_sidebar) && (@video.organizations.present? || @video.organizations.present? || @video.video_links.present?) ? 'l10' : 'l12' )
      .row
        .col.s12
          .video.video-container
            - if @video.video_site == 'youtube'
              #player
            - elsif @video.video_site == 'vimeo'
              iframe allowfullscreen=true frameborder="0" height="281" src="https://player.vimeo.com/video/#{@video.video_id}" width="500"
      .row
        .col.s12.m6.share-stats
          .share-btn
            span.youtube-view-count= "#{@video.view_count} views"
          .share-btn.fb
            .fb-share-button data-href=episode_url(@video) data-layout="button_count"
          .share-btn
            a.twitter-share-button data-text="#{twitter_share_text(@video)}" data-url=episode_url(@video) href="https://twitter.com/share" Tweet
        .col.s12.m6.right-align
          span.sponsor
            | Benefitted from this video? &nbsp;
            = link_to 'Click here to Support our efforts', support_us_path

        .col.s12
          strong
            | Published on:
            =< @video.published_at.strftime('%A, %e %B %Y')
        .col.s12
          = auto_link(simple_format(@video.description))
        .col.s12
          a(href="javascript:window.history.back()") &laquo; Back

    - if Feature.active?(:video_sidebar) && (@video.organizations.present? || @video.organizations.present? || @video.video_links.present?)
      .col.s12.l2
        .row
          - if @video.organizations.present?
            .col.s6.l12
              h5 Organization
              ul
                - @video.organizations.each do |organization|
                  li
                    a href=organization_alias_path(organization)
                      - if organization.image.present?
                        img.responsive-img src=organization.image
                        br
                      = organization.title
          - if @video.presenters.present?
            .col.s6.l12
              h5 Presenter
              ul
                - @video.presenters.each do |presenter|
                  li
                    a href=(presenter.twitter.present? ? speaker_path(presenter.twitter) : presenter_path(presenter))
                      - if presenter.avatar.present?
                        img.responsive-img src=presenter.avatar
                        br
                      =presenter.name
          - if @video.video_links.present?
            .col.s12
              h5 Links
              ul
                - @video.video_links.each do |link|
                  li
                    a href=link.url target="_blank" =link.title
          - if @video.tag_list.present?
            .col.s12
              h5 Tags
              p= raw @video.tag_list.map { |t| link_to t, tag_path(t) }.join(', ')


  .row
    .col.s12.m12.l10
      .fb-comments data-href=video_url(@video) data-numposts="5" data-mobile="true"

javascript:
  var tag = document.createElement('script');

  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '486',
      width: '864',
      videoId: '#{@video.video_id}',
      playerVars: { 'rel': 0, 'modestbranding': 1, 'ytp-pause-overlay': 0 },
      events: {
        'onStateChange': onPlayerStateChange
      }
    });
  }

  var started_playing = false
  function onPlayerStateChange(event) {
    if (event.data < 0) {
      ga('send', 'event', 'Videos', 'loaded', '#{@video.title}', #{@video.id});
    }
    if (event.data == YT.PlayerState.PLAYING) {
      if (!started_playing) {
        ga('send', 'event', 'Videos', 'started_play', '#{@video.title}', #{@video.id});
        started_playing = true;
      }
    }
    if (event.data == YT.PlayerState.ENDED) {
      ga('send', 'event', 'Videos', 'ended', '#{@video.title}', #{@video.id});
    }
  }

